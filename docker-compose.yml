version: '3.8'

services:
  # MinIO - Stockage objet (comme S3)
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Dagster - Orchestration
  dagster:
    build: .
    container_name: dagster
    ports:
      - "3000:3000"
    environment:
      - DAGSTER_HOME=/opt/dagster/dagster_home
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - PYTHONPATH=/opt/dagster
    volumes:
      - ./dagster_home:/opt/dagster/dagster_home
      - ./pipelines:/opt/dagster/pipelines
      - ./data:/opt/dagster/data
      - ./wait-for-minio.sh:/wait-for-minio.sh:ro
      - ./debug-dagster.sh:/debug-dagster.sh:ro
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Démarrage du conteneur Dagster...' &&
        chmod +x /wait-for-minio.sh &&
        chmod +x /debug-dagster.sh &&
        /wait-for-minio.sh minio:9000 &&
        echo 'Création des répertoires nécessaires...' &&
        mkdir -p /opt/dagster/data &&
        echo 'Exécution du script de débogage...' &&
        /debug-dagster.sh
      "

volumes:
  minio_data: